PRAGMA foreign_keys = ON;
BEGIN TRANSACTION;

CREATE TABLE IF NOT EXISTS "user" (
	"uid"	INTEGER NOT NULL,
	"type"	TEXT NOT NULL,
	"identity"	TEXT NOT NULL,
	"nick"	TEXT NOT NULL DEFAULT "",
	UNIQUE("type","identity"),
	PRIMARY KEY("uid")
);

CREATE TABLE IF NOT EXISTS "grant" (
	"id"	TEXT NOT NULL,
	"user"	INTEGER,
	"roles"	TEXT NOT NULL,
	"t"	INTEGER NOT NULL DEFAULT (UNIXEPOCH()),
	PRIMARY KEY("id"),
	FOREIGN KEY("user") REFERENCES "user"("uid") ON UPDATE SET NULL ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS "info" (
	"uid"	INTEGER NOT NULL,
	"telegram"	TEXT NOT NULL,
	"email"	TEXT NOT NULL,
	"phone"	TEXT NOT NULL,
	"qq"	TEXT NOT NULL,
	"wechat"	TEXT NOT NULL,
	PRIMARY KEY("uid"),
	FOREIGN KEY("uid") REFERENCES "user"("uid") ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS "address" (
	"uid"	INTEGER NOT NULL,
	"address"	TEXT NOT NULL,
	"phone"	TEXT NOT NULL,
	"name"	TEXT NOT NULL,
	PRIMARY KEY("uid"),
	FOREIGN KEY("uid") REFERENCES "user"("uid") ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS "billing" (
	"bid"	INTEGER NOT NULL,
	"uid"	INTEGER NOT NULL,
	"category"	TEXT NOT NULL DEFAULT '',
	"item"	TEXT NOT NULL,
	"spec"	TEXT NOT NULL DEFAULT '',
	"quantity"	INTEGER NOT NULL DEFAULT 1,
	"price"	INTEGER NOT NULL,
	"fulfilled"	INTEGER NOT NULL DEFAULT 0,
	"t"	INTEGER NOT NULL DEFAULT (UNIXEPOCH()),
	PRIMARY KEY("bid"),
	FOREIGN KEY("uid") REFERENCES "user"("uid")
);

CREATE TABLE IF NOT EXISTS "register" (
	"uid"	INTEGER NOT NULL,
	"legal_id"	BLOB NOT NULL,
	"arrived"	INTEGER NOT NULL DEFAULT 0,
	"t"	INTEGER NOT NULL DEFAULT (UNIXEPOCH()),
	PRIMARY KEY("uid"),
	FOREIGN KEY("uid") REFERENCES "user"("uid") ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS "volunteer" (
	"uid"	INTEGER NOT NULL,
	"arrive"	TEXT NOT NULL,
	"depart"	TEXT NOT NULL,
	"contrib"	TEXT NOT NULL,
	"tshirt"	TEXT NOT NULL,
	"other"	TEXT NOT NULL,
	"status"	INTEGER NOT NULL DEFAULT 0,
	PRIMARY KEY("uid"),
	FOREIGN KEY("uid") REFERENCES "register"("uid") ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS "badge" (
	"uid"	INTEGER NOT NULL,
	"line1"	TEXT NOT NULL,
	"line2"	TEXT NOT NULL,
	PRIMARY KEY("uid"),
	FOREIGN KEY("uid") REFERENCES "register"("uid") ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS "pgp_info" (
	"uid"	INTEGER NOT NULL,
	"fpr"	TEXT NOT NULL,
	"keyuid"	TEXT NOT NULL,
	PRIMARY KEY("uid"),
	FOREIGN KEY("uid") REFERENCES "register"("uid") ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS "pgp_sign" (
	"signer"	INTEGER NOT NULL,
	"signee"	INTEGER NOT NULL,
	"level"	INTEGER NOT NULL DEFAULT 0,
	PRIMARY KEY("signer","signee"),
	FOREIGN KEY("signee") REFERENCES "pgp_info"("uid") ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY("signer") REFERENCES "register"("uid") ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS "accommo" (
	"bid"	INTEGER NOT NULL,
	"uid"	INTEGER NOT NULL,
	"room"	TEXT NOT NULL,
	"type"	TEXT NOT NULL,
	"checkin"	TEXT NOT NULL,
	"checkout"	TEXT NOT NULL,
	"phone"	TEXT NOT NULL,
	"other"	TEXT NOT NULL,
	PRIMARY KEY("bid"),
	FOREIGN KEY("bid") REFERENCES "billing"("bid") ON UPDATE CASCADE ON DELETE CASCADE,
	FOREIGN KEY("uid") REFERENCES "register"("uid") ON UPDATE CASCADE ON DELETE CASCADE
);

COMMIT;
